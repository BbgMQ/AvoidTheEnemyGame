import pygame
import random
import math

# Initialize Pygame
pygame.init()

# Screen settings
WIDTH, HEIGHT = 600, 400
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Chase Game")

# Colors
WHITE = (255, 255, 255)
BLUE = (0, 0, 255)
RED = (255, 0, 0)
BLACK = (0, 0, 0)

# Clock and font
clock = pygame.time.Clock()
font = pygame.font.SysFont(None, 36)

def move_enemy_towards_player(enemy_x, enemy_y, player_x, player_y, speed):
    dx = player_x - enemy_x
    dy = player_y - enemy_y
    distance = math.hypot(dx, dy)
    if distance == 0:
        distance = 1
    dx, dy = dx / distance, dy / distance
    enemy_x += dx * speed
    enemy_y += dy * speed
    return enemy_x, enemy_y

def game_loop():
    # Player settings
    player_size = 40
    player_x = WIDTH // 2
    player_y = HEIGHT // 2
    player_speed = 5

    # Enemy settings
    enemy_size = 40
    enemy_x = random.randint(0, WIDTH - enemy_size)
    enemy_y = random.randint(0, HEIGHT - enemy_size)
    enemy_speed = 3

    score = 0
    running = True

    while running:
        clock.tick(60)
        screen.fill(WHITE)

        # Event handling
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()

        # Player movement (WASD)
        keys = pygame.key.get_pressed()
        if keys[pygame.K_w] and player_y > 0:
            player_y -= player_speed
        if keys[pygame.K_s] and player_y < HEIGHT - player_size:
            player_y += player_speed
        if keys[pygame.K_a] and player_x > 0:
            player_x -= player_speed
        if keys[pygame.K_d] and player_x < WIDTH - player_size:
            player_x += player_speed

        # Move enemy towards player
        enemy_x, enemy_y = move_enemy_towards_player(enemy_x, enemy_y, player_x, player_y, enemy_speed)

        # Draw player and enemy
        pygame.draw.rect(screen, BLUE, (player_x, player_y, player_size, player_size))
        pygame.draw.rect(screen, RED, (enemy_x, enemy_y, enemy_size, enemy_size))

        # Collision detection
        if (player_x < enemy_x + enemy_size and
            player_x + player_size > enemy_x and
            player_y < enemy_y + enemy_size and
            player_y + player_size > enemy_y):
            running = False  # Player died

        # Update score
        score += 1
        score_text = font.render(f"Score: {score}", True, BLACK)
        screen.blit(score_text, (10, 10))

        pygame.display.flip()

    # Game Over screen
    game_over_screen(score)

def game_over_screen(score):
    while True:
        screen.fill(WHITE)
        game_over_text = font.render("Game Over!", True, RED)
        score_text = font.render(f"Your Score: {score}", True, BLACK)
        restart_text = font.render("Press R to Restart or Q to Quit", True, BLUE)

        screen.blit(game_over_text, (WIDTH//2 - game_over_text.get_width()//2, HEIGHT//3))
        screen.blit(score_text, (WIDTH//2 - score_text.get_width()//2, HEIGHT//2))
        screen.blit(restart_text, (WIDTH//2 - restart_text.get_width()//2, HEIGHT//1.5))

        pygame.display.flip()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                exit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_r:  # Restart game
                    game_loop()
                if event.key == pygame.K_q:  # Quit game
                    pygame.quit()
                    exit()

# Start the game
game_loop()
